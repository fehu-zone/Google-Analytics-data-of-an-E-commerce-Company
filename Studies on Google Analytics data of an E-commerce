{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9667397,"sourceType":"datasetVersion","datasetId":5907220}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/fehu94/studies-on-google-analytics-data-of-an-e-commerce?scriptVersionId=202067652\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-10-19T15:00:54.278866Z","iopub.execute_input":"2024-10-19T15:00:54.279355Z","iopub.status.idle":"2024-10-19T15:00:54.285717Z","shell.execute_reply.started":"2024-10-19T15:00:54.279309Z","shell.execute_reply":"2024-10-19T15:00:54.284429Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/google-analytics-data-of-an-e-commerce-company/data-export.csv', on_bad_lines='skip')\nprint(df.head())\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T15:02:23.368314Z","iopub.execute_input":"2024-10-19T15:02:23.36876Z","iopub.status.idle":"2024-10-19T15:02:23.390334Z","shell.execute_reply.started":"2024-10-19T15:02:23.368717Z","shell.execute_reply":"2024-10-19T15:02:23.389074Z"}},"outputs":[{"name":"stdout","text":"   # ----------------------------------------\n0  # ----------------------------------------\n1                                         #  \n2                # Başlangıç tarihi: 20240921\n3                    # Bitiş tarihi: 20241018\n4                # Başlangıç tarihi: 20240921\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"# Yalnızca veri içeren satırları göster\ndf_cleaned = df.dropna()  # Boş satırları kaldır\nprint(df_cleaned.head())\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-10-19T15:02:53.359623Z","iopub.execute_input":"2024-10-19T15:02:53.360118Z","iopub.status.idle":"2024-10-19T15:02:53.370931Z","shell.execute_reply.started":"2024-10-19T15:02:53.360043Z","shell.execute_reply":"2024-10-19T15:02:53.369615Z"}},"outputs":[{"name":"stdout","text":"   # ----------------------------------------\n0  # ----------------------------------------\n1                                         #  \n2                # Başlangıç tarihi: 20240921\n3                    # Bitiş tarihi: 20241018\n4                # Başlangıç tarihi: 20240921\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}